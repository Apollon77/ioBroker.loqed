{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["import * as utils from '@iobroker/adapter-core';\nimport { LOQED } from 'loqed-api';\n\nclass Loqed extends utils.Adapter {\n    private loqedClient: LOQED | undefined;\n\n    public constructor(options: Partial<utils.AdapterOptions> = {}) {\n        super({\n            ...options,\n            name: 'loqed'\n        });\n        this.on('ready', this.onReady.bind(this));\n        this.on('stateChange', this.onStateChange.bind(this));\n        this.on('unload', this.onUnload.bind(this));\n    }\n\n    /**\n     * Is called when databases are connected and adapter received configuration.\n     */\n    private async onReady(): Promise<void> {\n        let loqedConfig: Record<string, any>;\n        try {\n            loqedConfig = JSON.parse(this.config.loqedConfig);\n        } catch {\n            this.log.error(`Could not parse LOQED config (${this.config.loqedConfig}), please ensure it is valid`);\n            return;\n        }\n\n        this.subscribeStates('lockMotor.goToPosition');\n\n        this.config.port = await this.getPortAsync(this.config.port);\n\n        this.loqedClient = new LOQED({\n            bridgeKey: loqedConfig.bridge_key,\n            apiKey: loqedConfig.lock_key_key,\n            ip: loqedConfig.bridge_ip,\n            lockId: loqedConfig.lock_key_local_id,\n            port: this.config.port\n        });\n\n        this.config.callbackUrl = `${this.config.callbackUrl}:${this.config.port}/`;\n\n        await this.ensureWebhookRegistered();\n        await this.syncStatus();\n\n        this.loqedClient.on('STATE_CHANGED', state => {\n            this.log.info(`State changed to ${state}`);\n        });\n\n        this.loqedClient.on('GO_TO_STATE', async state => {\n            this.log.info(`Lock tries to go to ${state}`);\n            await this.setStateAsync('lockMotor.goToPosition', state, true);\n        });\n\n        this.loqedClient.on('UNKNOWN_EVENT', data => {\n            this.log.warn(`Unknown event: ${JSON.stringify(data)}`);\n        });\n    }\n\n    /**\n     * Get states from lock and sync them to states\n     */\n    private async syncStatus(): Promise<void> {\n        try {\n            const status = await this.loqedClient!.getStatus();\n\n            await this.extendForeignObjectAsync(this.namespace, {\n                // @ts-expect-error issue already exists\n                type: 'device',\n                common: {\n                    name: 'LOQED lock'\n                },\n                native: status\n            });\n\n            await this.setStateAsync('info.connection', !!status.lock_online, true);\n            await this.setStateAsync('lockStatus.batteryPercentage', status.battery_percentage, true);\n            await this.setStateAsync('lockMotor.currentPosition', status.bolt_state.toUpperCase(), true);\n        } catch (e: any) {\n            this.log.error(`Could not sync status: ${e.message}`);\n        }\n    }\n\n    /**\n     * Ensure that we have a callback registered\n     */\n    private async ensureWebhookRegistered(): Promise<void> {\n        try {\n            const webhooks = await this.loqedClient!.listWebhooks();\n\n            this.log.debug(`Checking if webhook for \"${this.config.callbackUrl}\" is registered`);\n\n            const webhookRegistered = webhooks.find(entry => entry.url === this.config.callbackUrl);\n\n            if (webhookRegistered) {\n                this.log.info(`Webhook for our application already registered with id ${webhookRegistered.id}`);\n            } else {\n                this.log.info('No matching webhook found, registering one now');\n                await this.loqedClient!.registerWebhook(this.config.callbackUrl);\n            }\n        } catch (e: any) {\n            this.log.error(`Could not ensure, that webhook is registered: ${e.message}`);\n        }\n    }\n\n    /**\n     * Is called when adapter shuts down - callback has to be called under any circumstances!\n     */\n    private async onUnload(callback: () => void): Promise<void> {\n        try {\n            if (this.loqedClient) {\n                await this.loqedClient.stopServer();\n            }\n\n            callback();\n        } catch {\n            callback();\n        }\n    }\n    /**\n     * Is called if a subscribed state changes\n     */\n    private async onStateChange(id: string, state: ioBroker.State | null | undefined): Promise<void> {\n        if (!state || state.ack || !state.val || !this.loqedClient) {\n            // state deleted or already acked or no active loqedClient\n            return;\n        }\n\n        switch (state.val) {\n            case 'DAY_LOCK':\n                this.log.debug('Latch lock');\n                try {\n                    await this.loqedClient.latchLock();\n                } catch (e: any) {\n                    this.log.error(`Could not latch lock: ${e.message}`);\n                }\n                break;\n            case 'NIGHT_LOCK':\n                this.log.debug('Lock lock');\n\n                try {\n                    await this.loqedClient.lockLock();\n                } catch (e: any) {\n                    this.log.error(`Could not lock lock: ${e.message}`);\n                }\n                break;\n            case 'OPEN':\n                this.log.debug('Open lock');\n\n                try {\n                    await this.loqedClient.openLock();\n                } catch (e: any) {\n                    this.log.error(`Could not open lock: ${e.message}`);\n                }\n                break;\n            default:\n                this.log.warn(`Unknown state change: \"${id}\": ${state.val}`);\n        }\n    }\n}\n\nif (require.main !== module) {\n    module.exports = (options: Partial<utils.AdapterOptions> | undefined) => new Loqed(options);\n} else {\n    (() => new Loqed())();\n}\n"],
  "mappings": "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",
  "names": []
}
